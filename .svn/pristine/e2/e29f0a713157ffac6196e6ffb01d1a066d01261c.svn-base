//
//  AddTCourseViewController.m
//  FunCourse
//
//  Created by 寒竹子 on 14/12/25.
//  Copyright (c) 2014年 XuRan. All rights reserved.
//
#define XBorder 1
#define ButtonColor RGB(37 , 31, 39, 0.9)


#import "AddTCourseViewController.h"
#import "AddTCourseMoreViewController.h"
#import "GetCurrentDevice.h"
#import "TypePickerView.h"

@interface AddTCourseViewController ()<UITextFieldDelegate,UITextViewDelegate>
{
    NSMutableArray     *_typeArray;
    NSMutableArray    * _dataArray;
    NSInteger                tfTag;
    UIView                *superBG;
    CGFloat                xBorder;
    CGFloat                pbWidth;
    CGFloat                btnHeight;
}

@property (nonatomic, assign) BOOL isMoveUp; // 是否上移

@end

@implementation AddTCourseViewController

- (instancetype)init
{
    if (self = [super init]) {
        _dataArray = [[NSMutableArray alloc] init];
    }
    return self;
    
}
- (void)setupUI
{
    [self.view setBackgroundColor:[UIColor whiteColor]];
    self.navigationController.navigationBar.barStyle = UIBarStyleBlackOpaque;
    UIBarButtonItem * backItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"nav_icon_back"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] style:UIBarButtonItemStylePlain target:self action:@selector(back)];
    
    //Modified by Hangang
    UIBarButtonItem * nextItem = [[UIBarButtonItem alloc] initWithImage:[[UIImage imageNamed:@"nav_icon_more"] imageWithRenderingMode:UIImageRenderingModeAlwaysOriginal] style:UIBarButtonItemStylePlain target:self action:@selector(nextBtnClicked)];

    UILabel * titleView = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, 80, 30)];
    titleView.text = @"发布课程(1/3)";
    titleView.textColor = [UIColor whiteColor];
    titleView.font = [UIFont systemFontOfSize:18];
    titleView.textAlignment = NSTextAlignmentCenter;
    [self addNavigationWithTitle:nil leftItem:backItem rightItem:nextItem titleView:titleView];
    
    //根据iphone设备的型号来进行页面布局的适配
    CGFloat     bWidth = 0;
    CGFloat     YBorder = 0;
    pbWidth = 0;
    xBorder = 0;
    btnHeight = 0;

    if ([[GetCurrentDevice currentDeviceWithiPhone] isEqualToString:iPhone5])
    {
        bWidth  = 300;
        xBorder = 10;
        pbWidth = 221;
        btnHeight =30;
        YBorder = 35;
    } else if ([[GetCurrentDevice currentDeviceWithiPhone] isEqualToString:iPhone5s])
    {
        bWidth = 300;
        xBorder =  10;
        btnHeight = 35;
        pbWidth = 225;
        YBorder = 40;
    }else if ([[GetCurrentDevice currentDeviceWithiPhone] isEqualToString:iPhone6])
    {
        bWidth = 335;
        xBorder = 20;
        btnHeight = 40;
        pbWidth = 260;
        YBorder = 53;
    }else if ([[GetCurrentDevice currentDeviceWithiPhone] isEqualToString:iPhone6_Plus]) {
        bWidth  = 364;
        xBorder = 24;
        pbWidth = 289;
        btnHeight = 45;
        YBorder = 65;
    }
    xBorder = (SCREEN_SIZE.width-bWidth)/2;
    superBG = [[ UIView alloc ] initWithFrame:CGRectMake(0, 0, SCREEN_SIZE.width, SCREEN_SIZE.height)];
    superBG.backgroundColor = [ UIColor whiteColor];
    [self.view addSubview:superBG];
    
    // 通知中心 监控键盘的状态(打开 关闭 中英文切换)
    NSNotificationCenter * notifi = [NSNotificationCenter defaultCenter];
    
    [notifi addObserver:self selector:@selector(keyboardFrameChanged:) name:UIKeyboardWillChangeFrameNotification object:nil];
    
    // 最顶申明文字Label
    UILabel *introLabel = [[UILabel alloc] initWithFrame:CGRectMake(xBorder, 0, bWidth, 50)];
    introLabel.text = @"欢迎您发布课程，请认真填写真实的课程相关信息，请勿包含任何非法信息！";
    introLabel.font = [UIFont systemFontOfSize:13.0];
    introLabel.numberOfLines = 0;
    introLabel.textColor = [ UIColor lightGrayColor];
    [superBG addSubview:introLabel];
    
    // 类型按钮、选择类型按钮背景
    UIView *typeBG = [[ UIView alloc] initWithFrame:CGRectMake(xBorder, 50, bWidth, btnHeight)];
    typeBG.backgroundColor = [UIColor clearColor];
    typeBG.tag = 1001;
    [superBG addSubview:typeBG];
    
    // 类型按钮
    UIButton  *typeBtn = [[UIButton alloc]initWithFrame:CGRectMake(XBorder,1, 70, btnHeight)];
    [typeBtn setTitle:@"类型" forState:UIControlStateNormal];
    [typeBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    typeBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    typeBtn.contentHorizontalAlignment=UIControlContentHorizontalAlignmentCenter;
    typeBtn.backgroundColor= ButtonColor;
    [typeBtn.layer setMasksToBounds:YES];
    [typeBtn.layer setCornerRadius:5];
    [typeBG addSubview:typeBtn];
    
    // 点击选择类型按钮
    UIButton *picktypeBtn = [[UIButton alloc]initWithFrame:CGRectMake(CGRectGetMaxX(typeBtn.frame)+1, 1,pbWidth, btnHeight-2)];
    [picktypeBtn setTitle:@"点这选个类型" forState:UIControlStateNormal];
    picktypeBtn.tag = 201;
    [picktypeBtn.layer setMasksToBounds:YES];
    [picktypeBtn.layer setCornerRadius:5];
    [picktypeBtn.layer setBorderWidth:0.6];
    [picktypeBtn setTitleColor:[UIColor grayColor] forState:UIControlStateNormal];
    [picktypeBtn setTitleColor:[UIColor blueColor] forState:UIControlStateHighlighted];
    picktypeBtn.backgroundColor = [UIColor whiteColor];
    picktypeBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    [picktypeBtn addTarget:self action:@selector(picktypeBtnClicked:) forControlEvents:UIControlEventTouchUpInside];
    [typeBG addSubview:picktypeBtn];
    
    // 标签按钮和标签输入框背景
    UIView *typetagBG = [[UIView alloc] initWithFrame:CGRectMake(xBorder,CGRectGetMaxY(typeBG.frame)+YBorder, bWidth,2*btnHeight+5)];
    typetagBG.backgroundColor = [UIColor clearColor];
    [superBG addSubview:typetagBG];
    
    // 标签按钮
    UIButton   *typetagBtn = [[UIButton alloc]initWithFrame:CGRectMake(XBorder,1, bWidth-4,btnHeight)];
    [typetagBtn setTitle:@"给课程贴个标签" forState:UIControlStateNormal];
    [typetagBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    typetagBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    typetagBtn.contentHorizontalAlignment=UIControlContentHorizontalAlignmentCenter;
    typetagBtn.backgroundColor = ButtonColor ;
    [typetagBtn.layer setMasksToBounds:YES];
    [typetagBtn.layer setCornerRadius:5];
    [typetagBG addSubview:typetagBtn];
    
    // 标签输入框
    UITextField *typetagTF = [[UITextField alloc]initWithFrame:CGRectMake(XBorder, CGRectGetMaxY(typetagBtn.frame)+5,bWidth-4, btnHeight)];
    typetagTF.placeholder = @"这可以写标签";
    typetagTF.delegate = self ;
    typetagTF.tag = 401;
    typetagTF.returnKeyType = UIReturnKeyDone;
    typetagTF.backgroundColor = RGB(128, 128, 128, 0.1);
    typetagTF.font = [UIFont systemFontOfSize:14.0];
    [typetagBG addSubview:typetagTF];
    
    // 课程标题和标题输入框背景
    UIView *titleBG = [[UIView alloc] initWithFrame:CGRectMake(xBorder, CGRectGetMaxY(typetagBG.frame)+YBorder, bWidth, btnHeight*2+5)];
    titleBG.backgroundColor = [UIColor clearColor];
    [superBG addSubview:titleBG];
    
    // 课程标题按钮
    UIButton  *titleBtn = [[UIButton alloc]initWithFrame:CGRectMake(XBorder , 1, bWidth-4, btnHeight)];
    [titleBtn setTitle:@"给课程起个标题" forState:UIControlStateNormal];
    [titleBtn setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    titleBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    titleBtn.contentHorizontalAlignment =UIControlContentHorizontalAlignmentCenter;
    titleBtn.backgroundColor = ButtonColor ;
    [titleBtn.layer setMasksToBounds:YES];
    [titleBtn.layer setCornerRadius:5];
    [titleBG addSubview:titleBtn];
    
    // 课程标题输入框
    UITextField *titleTF = [[UITextField alloc]initWithFrame:CGRectMake(XBorder, CGRectGetMaxY(titleBtn.frame)+5, bWidth-4, btnHeight)];
    titleTF.placeholder = @"点这加个标题呗";
    titleTF.backgroundColor = RGB(128, 128, 128, 0.1);
    titleTF.delegate = self ;
    titleTF.tag = 402 ;
    titleTF.returnKeyType = UIReturnKeyDone;
    titleTF.font = [UIFont systemFontOfSize:14.0];
    [titleBG addSubview:titleTF];

}

/**
 *  选择课程类型
 */
#pragma mark - picktypeBtnClicked

-(void)picktypeBtnClicked:(UIButton *)btn
{
    //创建下拉列表
    UIButton *picktypeBtn = (UIButton *)[superBG viewWithTag:201];
    CGPoint pickerViewPoint = CGPointMake(picktypeBtn.center.x, picktypeBtn.center.y+130);
    NSArray *titles = @[@"教运动类就点我", @"教音乐类就点我", @"教摄影类就点我",@"搞娱乐类就点我",@"等等等等等等等"];
    _typeArray = [titles copy];
    TypePickerView *timePickView = [[TypePickerView alloc] initWithPoint:pickerViewPoint titles:titles images:nil];
    timePickView.selectRowAtIndex = ^(NSInteger index)
    {
        NSLog(@"select index:%ld", (long)index);
        [picktypeBtn setTitle:_typeArray[index] forState:UIControlStateNormal];
    };
    [timePickView show];
    [picktypeBtn setTitleColor:[UIColor blueColor] forState:UIControlStateNormal];
}

#pragma mark - Move Methods
// 复位superBG背景View的偏移
-(void)scrollEnd
{
    [UIView animateWithDuration:0.3 animations:^{
        superBG.frame = CGRectMake(0, 0, SCREEN_SIZE.width, SCREEN_SIZE.height);
    }];
    self.isMoveUp = NO;
}

#pragma mark - UITextFieldDelegate

- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
    tfTag = textField.tag;
    [textField resignFirstResponder];
    return YES;
}

- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event
{
    //点击UITextField 和UItextView以外任何区域收回键盘
    UITextField *titleTF = (UITextField *)[superBG viewWithTag:401];
    UITextField *typetagTF = (UITextField *)[superBG viewWithTag:402];
    [titleTF resignFirstResponder];
    [typetagTF resignFirstResponder];
}

/*
 *UITextField 输入完成后起键盘
 */
- (BOOL)textFieldShouldReturn:(UITextField *)textField
{
    [textField resignFirstResponder];
    return YES;
}

/*
 *限制页面内所有TextField输入范围
 */
-(BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string
{
    NSInteger    length = textField.text.length;
    NSInteger   maxlength = 20;
    if ((textField.tag == 401 ||textField.tag== 402) && length >= maxlength && string.length>0)
    {
        return  NO;
    }
    return YES;
}
/**
 *  接收到通知 键盘边框大小变化
 */
- (void)keyboardFrameChanged:(NSNotification *)nf
{
    // 使用userInfo 的UIKeyBoardFrameEndUserInfoKey数据可以判断键盘的大小
    // 获取键盘的目标区域
    NSDictionary * info = nf.userInfo;
    CGRect rect = [info[UIKeyboardFrameEndUserInfoKey] CGRectValue];
    NSLog(@"rect : %lf", rect.size.height);
    CGFloat duration = [info[UIKeyboardAnimationDurationUserInfoKey] doubleValue];
    
    // 根据rect的orangion.y可以判断键盘是开启还是关闭
    if (rect.origin.y == SCREEN_SIZE.height) {
        // 键盘关闭
        [UIView animateWithDuration:duration animations:^{
            [self scrollEnd];
  
        } completion:^(BOOL finished) {
            
        }];
    }else {
        // 打开键盘或者中英文切换
        // 根据目标位置的高度判断键盘的类型
        if (rect.size.height == 216) {
            // 英文键盘
            [UIView animateWithDuration:duration animations:^{
                if (self.isMoveUp == NO) {
                    if (tfTag == 402 ) {
                        CGPoint superCenter = superBG.center;
                        superCenter.y -= 216-2*btnHeight;
                        superBG.center = superCenter;
                    }
                    self.isMoveUp = YES; // 已经上移
                }
            } completion:^(BOOL finished) {
           
            }];
        }else if (rect.size.height == 252) {
            // 中文键盘
            [UIView animateWithDuration:duration animations:^{
                if (!self.isMoveUp) {
                    if (tfTag == 402 ) {
                        CGPoint superCenter = superBG.center;
                        superCenter.y -= 252 -2*btnHeight;
                        superBG.center = superCenter;
                    }
                    self.isMoveUp = YES;
                }

            } completion:^(BOOL finished) {
          
            }];
        }else if (rect.size.height == 258){
            // 英文键盘 258
            [UIView animateWithDuration:duration animations:^{
                if (!self.isMoveUp) {
                    if (tfTag == 402 ) {
                        CGPoint superCenter = superBG.center;
                        superCenter.y -= 258 -2*btnHeight;
                        superBG.center = superCenter;
                    }
                    self.isMoveUp = YES;
                }
            } completion:^(BOOL finished) {
           
            }];
        }else if (rect.size.height == 253) {
            // 英文键盘 253
            [UIView animateWithDuration:duration animations:^{
                if (!self.isMoveUp) {
                    if (tfTag == 402) {
                        
                        CGPoint superCenter = superBG.center;
                        superCenter.y -= 253 -2*btnHeight;
                        superBG.center = superCenter;
                    }
                    self.isMoveUp = YES;
                }
            } completion:^(BOOL finished) {
           
            }];
        }
    }
}

#pragma mark - pullBack NavigationController
// 返回首页
- (void)back
{
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark - push NavigationController
// 跳转到下一步页面
-(void)nextBtnClicked
{
    AddTCourseMoreViewController *moreVC = [[AddTCourseMoreViewController alloc] init];
    moreVC.modalTransitionStyle = UIModalTransitionStyleCoverVertical;
    moreVC.superNvc = self.superNvc;
    [self.superNvc pushViewController:moreVC animated:YES];
}

/**
 *  视图将要显示
 */
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    [self setupUI];
}

/**
 *  视图将要消失
 */
- (void)viewWillDisappear:(BOOL)animated
{
    [super viewWillDisappear:animated];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end

